<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Optano.Algorithm.Tuner.Application</name>
    </assembly>
    <members>
        <member name="T:Optano.Algorithm.Tuner.Application.ArgumentParser">
            <summary>
            Utility class for parsing command line arguments.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ArgumentParser._basicCommand">
            <summary>
            The basic command to the target algorithm as specified by the parsed arguments.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ArgumentParser._pathToParameterTree">
            <summary>
            The path to an XML file defining the parameter tree as specified by the parsed arguments.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ArgumentParser._tuneByValue">
            <summary>
            A value indicating whether the target algorithm should be tuned by value (otherwise, it's tuned by
            runtime).
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ArgumentParser._sortValuesAscendingly">
            <summary>
            A value indicating whether lower values are better than higher ones.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ArgumentParser._isMaster">
            <summary>
            A value indicating whether the instance of OPTANO Algorithm Tuner should act as worker or master.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ArgumentParser._factorPar">
            <summary>
            PAR k Factor.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ArgumentParser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Application.ArgumentParser"/> class.
            </summary>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Application.ArgumentParser.BasicCommand">
            <summary>
            Gets the basic command to the target algorithm.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Application.ArgumentParser.ParseArguments(System.String[])"/>
            has been executed.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Application.ArgumentParser.PathToParameterTree">
            <summary>
            Gets the path to an XML file defining the parameter tree.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Application.ArgumentParser.ParseArguments(System.String[])"/>
            has been executed.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Application.ArgumentParser.MasterRequested">
            <summary>
            Gets a value indicating whether this instance of OPTANO Algorithm Tuner should act as worker or master.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Application.ArgumentParser.ParseArguments(System.String[])"/>
            has been executed.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Application.ArgumentParser.TuneByValue">
            <summary>
            Gets a value indicating whether whether the target algorithm should be tuned by value (otherwise, it's
            tuned by runtime).
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Application.ArgumentParser.ParseArguments(System.String[])"/>
            has been executed.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Application.ArgumentParser.SortValuesAscendingly">
            <summary>
            Gets a value indicating whether whether lower values are better than higher ones.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if called before <see cref="M:Optano.Algorithm.Tuner.Application.ArgumentParser.ParseArguments(System.String[])"/>
            has been executed.</exception>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Application.ArgumentParser.FactorPar">
            <summary>
            Gets the factor to penalize timed out runs with.
            Default: 1.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ArgumentParser.ParseArguments(System.String[])">
            <summary>
            Parses the provided arguments.
            </summary>
            <param name="args">Arguments to parse.</param>
            <exception cref="T:NDesk.Options.OptionException">Thrown if required parameters have not been set.</exception>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ArgumentParser.PrintHelp">
            <summary>
            Prints a description on how to use the command line arguments.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ArgumentParser.CreateOptionSet">
            <summary>
            Creates an <see cref="T:NDesk.Options.OptionSet" /> containing all options important for running
            Optano.Algorithm.Tuner.Application.exe.
            </summary>
            <returns>The created <see cref="T:NDesk.Options.OptionSet" />.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1">
            <summary>
            An abstract base class for executing arbitrary commands as target algorithms.
            </summary>
            <typeparam name="TResult">Type of the result.</typeparam>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement">
            <summary>
            Part of the <see cref="P:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.Command"/> that will be replaced with the path to the instance file.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement">
            <summary>
            Part of the <see cref="P:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.Command"/> that will be replaced with the parameters in the form of
            "-firstIdentifier firstValue -secondIdentifier secondValue ... -nthIdentifier nthValue".
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.#ctor(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1"/> class.
            </summary>
            <param name="parameters">Parameters for the target algorithm.</param>
            <param name="basicCommand">The basic command to the target algorithm as it should be executed by the
            command line. The path to the instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement"/> and <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement"/>.</param>
        </member>
        <member name="P:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.Command">
            <summary>
            Gets the configured command to the target algorithm as it should be executed by the command line. The path
            to the instance file will be set by replacing <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement"/>.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.Run(Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile,System.Threading.CancellationToken)">
            <summary>
            Creates a cancellable task that runs the <see cref="P:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.Command"/> on the given instance.
            </summary>
            <param name="instance">Instance to run on.</param>
            <param name="cancellationToken">Token that is regurlarly checked for cancellation.
            If cancellation is detected, the task will be stopped.</param>
            <returns>A task that returns the run's result on completion.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.BuildProcessStartInfo(Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile)">
            <summary>
            Builds the <see cref="T:System.Diagnostics.ProcessStartInfo"/> for starting the algorithm on the given instance.
            </summary>
            <param name="instance">The instance to start the algorithm on.</param>
            <returns>The built <see cref="T:System.Diagnostics.ProcessStartInfo"/>.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Application.Program">
            <summary>
            Program to tune arbitrary commands via OPTANO Algorithm Tuner.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.Program.Main(System.String[])">
            <summary>
            Entry point to the program.
            </summary>
            <param name="args">Program arguments. Call the program with --help for more information.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.Program.RunMaster(Optano.Algorithm.Tuner.Application.ArgumentParser)">
            <summary>
            Starts the OPTANO Algorithm Tuner master.
            </summary>
            <param name="argsParser">An <see cref="T:Optano.Algorithm.Tuner.Application.ArgumentParser"/> that was already used to parse the command line
            arguments.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.Program.BuildValueTuner(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Builds a OPTANO Algorithm Tuner instance that tunes by last value printed to console.
            </summary>
            <param name="config">The configuration.</param>
            <param name="trainingInstanceFolder">The path to the folder containing training instances.</param>
            <param name="testInstanceFolder">The path to the folder containing test instances.</param>
            <param name="basicCommand">The basic command to the target algorithm as it should be executed by the
            command line. The path to the instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement"/> and
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement"/>.</param>
            <param name="pathToParameterTree">The path to a parameter tree defined via XML.</param>
            <param name="ascending">Whether smaller values are better.</param>
            <returns>The built OPTANO Algorithm Tuner instance.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.Program.BuildRuntimeTuner(Optano.Algorithm.Tuner.Configuration.AlgorithmTunerConfiguration,System.String,System.String,System.String,System.String,System.Int32)">
            <summary>
            Builds a OPTANO Algorithm Tuner instance that tunes by process runtime.
            </summary>
            <param name="config">
            The configuration.
            </param>
            <param name="trainingInstanceFolder">
            The path to the folder containing training instances.
            </param>
            <param name="testInstanceFolder">
            The path to the folder containing test instances.
            </param>
            <param name="basicCommand">
            The basic command to the target algorithm as it should be executed by the
            command line. The path to the instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement"/> and
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement"/>.
            </param>
            <param name="pathToParameterTree">
            The path to a parameter tree defined via XML.
            </param>
            <param name="factorParK">
            The PAR-k factor.
            </param>
            <returns>
            The built OPTANO Algorithm Tuner instance.
            </returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.Program.ExtractInstances(System.String)">
            <summary>
            Extracts all files from a folder and returns them as <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile"/>s.
            </summary>
            <param name="pathToInstanceFolder">Path to the folder to find instances in.</param>
            <returns>The extracted instances.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutor">
            <summary>
            Runs a predefined command on the command line by adding parameters and the path to an instance file and
            measures the time this process runs.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutor._timeout">
            <summary>
            The timeout.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutor.#ctor(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele},System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutor" /> class.
            </summary>
            <param name="parameters">Parameters for the target algorithm.</param>
            <param name="basicCommand">The basic command to the target algorithm as it should be executed by the
            command line. The path to the instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement" /> and
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement" />.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutor.Run(Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile,System.Threading.CancellationToken)">
            <summary>
            Creates a cancellable task that runs the <see cref="P:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.Command"/> on the given instance.
            </summary>
            <param name="instance">Instance to run on.</param>
            <param name="cancellationToken">Token that is regurlarly checked for cancellation.
            If cancellation is detected, the task will be stopped.</param>
            <returns>A task that returns the run's runtime on completion.</returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutorFactory">
            <summary>
            A simple implementation of 
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutorFactory._basicCommand">
            <summary>
            The basic command to the target algorithm as it should be executed by the command line. The path to the
            instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement"/>
            and <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutorFactory._timeout">
            <summary>
            The timeout.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutorFactory.#ctor(System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutorFactory"/> class.
            </summary>
            <param name="basicCommand">The basic command to the target algorithm as it should be executed by the
            command line. The path to the instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement"/> and
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement"/>.
            </param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.TimeMeasuringExecutorFactory.ConfigureTargetAlgorithm(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Configures a time measuring executor using the given parameters.
            </summary>
            <param name="parameters">The parameters to configure the time measuring executor with.</param>
            <returns>
            The configured time measuring executor.
            </returns>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Application.ValueReadingExecutor">
            <summary>
            Runs a predefined command on the command line by adding parameters and the path to an instance file and
            reads the last number the command writes to console before termination.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ValueReadingExecutor.NumberMatcher">
            <summary>
            A regular expression that matches numbers in different formats, last numbers first.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ValueReadingExecutor._timeout">
            <summary>
            The timeout.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ValueReadingExecutor.#ctor(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele},System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Application.ValueReadingExecutor" /> class.
            </summary>
            <param name="parameters">Parameters for the target algorithm.</param>
            <param name="basicCommand">The basic command to the target algorithm as it should be executed by the
            command line. The path to the instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement" /> and
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement" />.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ValueReadingExecutor.Run(Optano.Algorithm.Tuner.TargetAlgorithm.Instances.InstanceFile,System.Threading.CancellationToken)">
            <summary>
            Creates a cancellable task that runs the <see cref="P:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.Command"/> on the given instance.
            </summary>
            <param name="instance">Instance to run on.</param>
            <param name="cancellationToken">Token that is regurlarly checked for cancellation.
            If cancellation is detected, the task will be stopped.</param>
            <returns>A task that returns the run's result on completion.</returns>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ValueReadingExecutor.CleanUp(System.Diagnostics.Process)">
            <summary>
            Cleans up all system resources that have been opened when running the process.
            </summary>
            <param name="process">The (exited) process.</param>
        </member>
        <member name="T:Optano.Algorithm.Tuner.Application.ValueReadingExecutorFactory">
            <summary>
            A simple implementation of 
            <see cref="T:Optano.Algorithm.Tuner.TargetAlgorithm.ITargetAlgorithmFactory`3"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ValueReadingExecutorFactory._basicCommand">
            <summary>
            The basic command to the target algorithm as it should be executed by the command line. The path to the
            instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement"/>
            and <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement"/>.
            </summary>
        </member>
        <member name="F:Optano.Algorithm.Tuner.Application.ValueReadingExecutorFactory._timeout">
            <summary>
            The timeout.
            </summary>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ValueReadingExecutorFactory.#ctor(System.String,System.TimeSpan)">
            <summary>
            Initializes a new instance of the <see cref="T:Optano.Algorithm.Tuner.Application.ValueReadingExecutorFactory" /> class.
            </summary>
            <param name="basicCommand">The basic command to the target algorithm as it should be executed by the
            command line. The path to the instance file and the parameters will be set by replacing
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.InstanceReplacement" /> and
            <see cref="F:Optano.Algorithm.Tuner.Application.CommandExecutorBase`1.ParameterReplacement" />.</param>
            <param name="timeout">The timeout.</param>
        </member>
        <member name="M:Optano.Algorithm.Tuner.Application.ValueReadingExecutorFactory.ConfigureTargetAlgorithm(System.Collections.Generic.Dictionary{System.String,Optano.Algorithm.Tuner.Genomes.Values.IAllele})">
            <summary>
            Configures a value reading executor using the given parameters.
            </summary>
            <param name="parameters">The parameters to configure the value reading executor with.</param>
            <returns>The configured value reading executor.</returns>
        </member>
    </members>
</doc>
